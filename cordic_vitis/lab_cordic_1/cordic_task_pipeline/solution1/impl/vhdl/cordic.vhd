-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordic is
port (
    in_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    in_theta_V_V_empty_n : IN STD_LOGIC;
    in_theta_V_V_read : OUT STD_LOGIC;
    out_s_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_s_V_V_full_n : IN STD_LOGIC;
    out_s_V_V_write : OUT STD_LOGIC;
    out_c_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_c_V_V_full_n : IN STD_LOGIC;
    out_c_V_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of cordic is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cordic,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.365000,HLS_SYN_LAT=31,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1040,HLS_SYN_LUT=4191,HLS_VERSION=2020_1}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal Block_ap_fixed_base_U0_ap_start : STD_LOGIC;
    signal Block_ap_fixed_base_U0_ap_done : STD_LOGIC;
    signal Block_ap_fixed_base_U0_ap_continue : STD_LOGIC;
    signal Block_ap_fixed_base_U0_ap_idle : STD_LOGIC;
    signal Block_ap_fixed_base_U0_ap_ready : STD_LOGIC;
    signal Block_ap_fixed_base_U0_Stage0_COS_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal Block_ap_fixed_base_U0_Stage0_COS_V_V_write : STD_LOGIC;
    signal Block_ap_fixed_base_U0_Stage0_Sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal Block_ap_fixed_base_U0_Stage0_Sin_V_V_write : STD_LOGIC;
    signal one_stage20_U0_ap_start : STD_LOGIC;
    signal one_stage20_U0_ap_done : STD_LOGIC;
    signal one_stage20_U0_ap_continue : STD_LOGIC;
    signal one_stage20_U0_ap_idle : STD_LOGIC;
    signal one_stage20_U0_ap_ready : STD_LOGIC;
    signal one_stage20_U0_start_out : STD_LOGIC;
    signal one_stage20_U0_start_write : STD_LOGIC;
    signal one_stage20_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage20_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage20_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage20_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage20_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage20_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage20_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage20_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage20_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage21_U0_ap_start : STD_LOGIC;
    signal one_stage21_U0_ap_done : STD_LOGIC;
    signal one_stage21_U0_ap_continue : STD_LOGIC;
    signal one_stage21_U0_ap_idle : STD_LOGIC;
    signal one_stage21_U0_ap_ready : STD_LOGIC;
    signal one_stage21_U0_start_out : STD_LOGIC;
    signal one_stage21_U0_start_write : STD_LOGIC;
    signal one_stage21_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage21_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage21_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage21_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage21_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage21_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage21_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage21_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage21_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage22_U0_ap_start : STD_LOGIC;
    signal one_stage22_U0_ap_done : STD_LOGIC;
    signal one_stage22_U0_ap_continue : STD_LOGIC;
    signal one_stage22_U0_ap_idle : STD_LOGIC;
    signal one_stage22_U0_ap_ready : STD_LOGIC;
    signal one_stage22_U0_start_out : STD_LOGIC;
    signal one_stage22_U0_start_write : STD_LOGIC;
    signal one_stage22_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage22_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage22_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage22_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage22_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage22_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage22_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage22_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage22_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage23_U0_ap_start : STD_LOGIC;
    signal one_stage23_U0_ap_done : STD_LOGIC;
    signal one_stage23_U0_ap_continue : STD_LOGIC;
    signal one_stage23_U0_ap_idle : STD_LOGIC;
    signal one_stage23_U0_ap_ready : STD_LOGIC;
    signal one_stage23_U0_start_out : STD_LOGIC;
    signal one_stage23_U0_start_write : STD_LOGIC;
    signal one_stage23_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage23_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage23_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage23_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage23_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage23_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage23_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage23_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage23_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage24_U0_ap_start : STD_LOGIC;
    signal one_stage24_U0_ap_done : STD_LOGIC;
    signal one_stage24_U0_ap_continue : STD_LOGIC;
    signal one_stage24_U0_ap_idle : STD_LOGIC;
    signal one_stage24_U0_ap_ready : STD_LOGIC;
    signal one_stage24_U0_start_out : STD_LOGIC;
    signal one_stage24_U0_start_write : STD_LOGIC;
    signal one_stage24_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage24_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage24_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage24_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage24_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage24_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage24_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage24_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage24_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage25_U0_ap_start : STD_LOGIC;
    signal one_stage25_U0_ap_done : STD_LOGIC;
    signal one_stage25_U0_ap_continue : STD_LOGIC;
    signal one_stage25_U0_ap_idle : STD_LOGIC;
    signal one_stage25_U0_ap_ready : STD_LOGIC;
    signal one_stage25_U0_start_out : STD_LOGIC;
    signal one_stage25_U0_start_write : STD_LOGIC;
    signal one_stage25_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage25_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage25_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage25_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage25_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage25_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage25_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage25_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage25_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage26_U0_ap_start : STD_LOGIC;
    signal one_stage26_U0_ap_done : STD_LOGIC;
    signal one_stage26_U0_ap_continue : STD_LOGIC;
    signal one_stage26_U0_ap_idle : STD_LOGIC;
    signal one_stage26_U0_ap_ready : STD_LOGIC;
    signal one_stage26_U0_start_out : STD_LOGIC;
    signal one_stage26_U0_start_write : STD_LOGIC;
    signal one_stage26_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage26_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage26_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage26_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage26_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage26_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage26_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage26_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage26_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage27_U0_ap_start : STD_LOGIC;
    signal one_stage27_U0_ap_done : STD_LOGIC;
    signal one_stage27_U0_ap_continue : STD_LOGIC;
    signal one_stage27_U0_ap_idle : STD_LOGIC;
    signal one_stage27_U0_ap_ready : STD_LOGIC;
    signal one_stage27_U0_start_out : STD_LOGIC;
    signal one_stage27_U0_start_write : STD_LOGIC;
    signal one_stage27_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage27_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage27_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage27_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage27_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage27_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage27_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage27_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage27_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage28_U0_ap_start : STD_LOGIC;
    signal one_stage28_U0_ap_done : STD_LOGIC;
    signal one_stage28_U0_ap_continue : STD_LOGIC;
    signal one_stage28_U0_ap_idle : STD_LOGIC;
    signal one_stage28_U0_ap_ready : STD_LOGIC;
    signal one_stage28_U0_start_out : STD_LOGIC;
    signal one_stage28_U0_start_write : STD_LOGIC;
    signal one_stage28_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage28_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage28_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage28_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage28_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage28_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage28_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage28_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage28_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage29_U0_ap_start : STD_LOGIC;
    signal one_stage29_U0_ap_done : STD_LOGIC;
    signal one_stage29_U0_ap_continue : STD_LOGIC;
    signal one_stage29_U0_ap_idle : STD_LOGIC;
    signal one_stage29_U0_ap_ready : STD_LOGIC;
    signal one_stage29_U0_start_out : STD_LOGIC;
    signal one_stage29_U0_start_write : STD_LOGIC;
    signal one_stage29_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage29_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage29_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage29_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage29_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage29_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage29_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage29_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage29_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage30_U0_ap_start : STD_LOGIC;
    signal one_stage30_U0_ap_done : STD_LOGIC;
    signal one_stage30_U0_ap_continue : STD_LOGIC;
    signal one_stage30_U0_ap_idle : STD_LOGIC;
    signal one_stage30_U0_ap_ready : STD_LOGIC;
    signal one_stage30_U0_start_out : STD_LOGIC;
    signal one_stage30_U0_start_write : STD_LOGIC;
    signal one_stage30_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage30_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage30_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage30_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage30_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage30_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage30_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage30_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage30_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage31_U0_ap_start : STD_LOGIC;
    signal one_stage31_U0_ap_done : STD_LOGIC;
    signal one_stage31_U0_ap_continue : STD_LOGIC;
    signal one_stage31_U0_ap_idle : STD_LOGIC;
    signal one_stage31_U0_ap_ready : STD_LOGIC;
    signal one_stage31_U0_start_out : STD_LOGIC;
    signal one_stage31_U0_start_write : STD_LOGIC;
    signal one_stage31_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage31_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage31_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage31_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage31_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage31_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage31_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage31_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage31_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage32_U0_ap_start : STD_LOGIC;
    signal one_stage32_U0_ap_done : STD_LOGIC;
    signal one_stage32_U0_ap_continue : STD_LOGIC;
    signal one_stage32_U0_ap_idle : STD_LOGIC;
    signal one_stage32_U0_ap_ready : STD_LOGIC;
    signal one_stage32_U0_start_out : STD_LOGIC;
    signal one_stage32_U0_start_write : STD_LOGIC;
    signal one_stage32_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage32_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage32_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage32_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage32_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage32_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage32_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage32_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage32_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage33_U0_ap_start : STD_LOGIC;
    signal one_stage33_U0_ap_done : STD_LOGIC;
    signal one_stage33_U0_ap_continue : STD_LOGIC;
    signal one_stage33_U0_ap_idle : STD_LOGIC;
    signal one_stage33_U0_ap_ready : STD_LOGIC;
    signal one_stage33_U0_start_out : STD_LOGIC;
    signal one_stage33_U0_start_write : STD_LOGIC;
    signal one_stage33_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage33_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage33_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage33_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage33_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage33_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage33_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage33_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage33_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal one_stage34_U0_ap_start : STD_LOGIC;
    signal one_stage34_U0_ap_done : STD_LOGIC;
    signal one_stage34_U0_ap_continue : STD_LOGIC;
    signal one_stage34_U0_ap_idle : STD_LOGIC;
    signal one_stage34_U0_ap_ready : STD_LOGIC;
    signal one_stage34_U0_start_out : STD_LOGIC;
    signal one_stage34_U0_start_write : STD_LOGIC;
    signal one_stage34_U0_s_current_cos_V_V_read : STD_LOGIC;
    signal one_stage34_U0_s_current_sin_V_V_read : STD_LOGIC;
    signal one_stage34_U0_s_current_theta_V_V_read : STD_LOGIC;
    signal one_stage34_U0_s_output_cos_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage34_U0_s_output_cos_V_V_write : STD_LOGIC;
    signal one_stage34_U0_s_output_sin_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage34_U0_s_output_sin_V_V_write : STD_LOGIC;
    signal one_stage34_U0_s_output_theta_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal one_stage34_U0_s_output_theta_V_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_ap_start : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_ap_done : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_ap_continue : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_ap_idle : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_ap_ready : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_Theta16_V_V_read : STD_LOGIC;
    signal Stage0_COS_V_V_full_n : STD_LOGIC;
    signal Stage0_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage0_COS_V_V_empty_n : STD_LOGIC;
    signal Stage0_Sin_V_V_full_n : STD_LOGIC;
    signal Stage0_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage0_Sin_V_V_empty_n : STD_LOGIC;
    signal Stage1_COS_V_V_full_n : STD_LOGIC;
    signal Stage1_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage1_COS_V_V_empty_n : STD_LOGIC;
    signal Stage1_Sin_V_V_full_n : STD_LOGIC;
    signal Stage1_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage1_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta2_V_V_full_n : STD_LOGIC;
    signal Theta2_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta2_V_V_empty_n : STD_LOGIC;
    signal Stage2_COS_V_V_full_n : STD_LOGIC;
    signal Stage2_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage2_COS_V_V_empty_n : STD_LOGIC;
    signal Stage2_Sin_V_V_full_n : STD_LOGIC;
    signal Stage2_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage2_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta3_V_V_full_n : STD_LOGIC;
    signal Theta3_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta3_V_V_empty_n : STD_LOGIC;
    signal Stage3_COS_V_V_full_n : STD_LOGIC;
    signal Stage3_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage3_COS_V_V_empty_n : STD_LOGIC;
    signal Stage3_Sin_V_V_full_n : STD_LOGIC;
    signal Stage3_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage3_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta4_V_V_full_n : STD_LOGIC;
    signal Theta4_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta4_V_V_empty_n : STD_LOGIC;
    signal Stage4_COS_V_V_full_n : STD_LOGIC;
    signal Stage4_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage4_COS_V_V_empty_n : STD_LOGIC;
    signal Stage4_Sin_V_V_full_n : STD_LOGIC;
    signal Stage4_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage4_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta5_V_V_full_n : STD_LOGIC;
    signal Theta5_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta5_V_V_empty_n : STD_LOGIC;
    signal Stage5_COS_V_V_full_n : STD_LOGIC;
    signal Stage5_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage5_COS_V_V_empty_n : STD_LOGIC;
    signal Stage5_Sin_V_V_full_n : STD_LOGIC;
    signal Stage5_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage5_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta6_V_V_full_n : STD_LOGIC;
    signal Theta6_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta6_V_V_empty_n : STD_LOGIC;
    signal Stage6_COS_V_V_full_n : STD_LOGIC;
    signal Stage6_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage6_COS_V_V_empty_n : STD_LOGIC;
    signal Stage6_Sin_V_V_full_n : STD_LOGIC;
    signal Stage6_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage6_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta7_V_V_full_n : STD_LOGIC;
    signal Theta7_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta7_V_V_empty_n : STD_LOGIC;
    signal Stage7_COS_V_V_full_n : STD_LOGIC;
    signal Stage7_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage7_COS_V_V_empty_n : STD_LOGIC;
    signal Stage7_Sin_V_V_full_n : STD_LOGIC;
    signal Stage7_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage7_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta8_V_V_full_n : STD_LOGIC;
    signal Theta8_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta8_V_V_empty_n : STD_LOGIC;
    signal Stage8_COS_V_V_full_n : STD_LOGIC;
    signal Stage8_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage8_COS_V_V_empty_n : STD_LOGIC;
    signal Stage8_Sin_V_V_full_n : STD_LOGIC;
    signal Stage8_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage8_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta9_V_V_full_n : STD_LOGIC;
    signal Theta9_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta9_V_V_empty_n : STD_LOGIC;
    signal Stage9_COS_V_V_full_n : STD_LOGIC;
    signal Stage9_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage9_COS_V_V_empty_n : STD_LOGIC;
    signal Stage9_Sin_V_V_full_n : STD_LOGIC;
    signal Stage9_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage9_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta10_V_V_full_n : STD_LOGIC;
    signal Theta10_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta10_V_V_empty_n : STD_LOGIC;
    signal Stage10_COS_V_V_full_n : STD_LOGIC;
    signal Stage10_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage10_COS_V_V_empty_n : STD_LOGIC;
    signal Stage10_Sin_V_V_full_n : STD_LOGIC;
    signal Stage10_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage10_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta11_V_V_full_n : STD_LOGIC;
    signal Theta11_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta11_V_V_empty_n : STD_LOGIC;
    signal Stage11_COS_V_V_full_n : STD_LOGIC;
    signal Stage11_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage11_COS_V_V_empty_n : STD_LOGIC;
    signal Stage11_Sin_V_V_full_n : STD_LOGIC;
    signal Stage11_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage11_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta12_V_V_full_n : STD_LOGIC;
    signal Theta12_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta12_V_V_empty_n : STD_LOGIC;
    signal Stage12_COS_V_V_full_n : STD_LOGIC;
    signal Stage12_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage12_COS_V_V_empty_n : STD_LOGIC;
    signal Stage12_Sin_V_V_full_n : STD_LOGIC;
    signal Stage12_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage12_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta13_V_V_full_n : STD_LOGIC;
    signal Theta13_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta13_V_V_empty_n : STD_LOGIC;
    signal Stage13_COS_V_V_full_n : STD_LOGIC;
    signal Stage13_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage13_COS_V_V_empty_n : STD_LOGIC;
    signal Stage13_Sin_V_V_full_n : STD_LOGIC;
    signal Stage13_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage13_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta14_V_V_full_n : STD_LOGIC;
    signal Theta14_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta14_V_V_empty_n : STD_LOGIC;
    signal Stage14_COS_V_V_full_n : STD_LOGIC;
    signal Stage14_COS_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage14_COS_V_V_empty_n : STD_LOGIC;
    signal Stage14_Sin_V_V_full_n : STD_LOGIC;
    signal Stage14_Sin_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Stage14_Sin_V_V_empty_n : STD_LOGIC;
    signal Theta15_V_V_full_n : STD_LOGIC;
    signal Theta15_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta15_V_V_empty_n : STD_LOGIC;
    signal Theta16_V_V_full_n : STD_LOGIC;
    signal Theta16_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Theta16_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Block_ap_fixed_base_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_ap_fixed_base_U0_ap_ready : STD_LOGIC;
    signal Block_ap_fixed_base_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_one_stage20_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_one_stage20_U0_ap_ready : STD_LOGIC;
    signal one_stage20_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Block_ap_fixed_base_U0_start_full_n : STD_LOGIC;
    signal Block_ap_fixed_base_U0_start_write : STD_LOGIC;
    signal start_for_one_stage21_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage21_U0_full_n : STD_LOGIC;
    signal start_for_one_stage21_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage21_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage22_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage22_U0_full_n : STD_LOGIC;
    signal start_for_one_stage22_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage22_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage23_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage23_U0_full_n : STD_LOGIC;
    signal start_for_one_stage23_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage23_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage24_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage24_U0_full_n : STD_LOGIC;
    signal start_for_one_stage24_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage24_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage25_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage25_U0_full_n : STD_LOGIC;
    signal start_for_one_stage25_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage25_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage26_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage26_U0_full_n : STD_LOGIC;
    signal start_for_one_stage26_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage26_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage27_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage27_U0_full_n : STD_LOGIC;
    signal start_for_one_stage27_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage27_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage28_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage28_U0_full_n : STD_LOGIC;
    signal start_for_one_stage28_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage28_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage29_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage29_U0_full_n : STD_LOGIC;
    signal start_for_one_stage29_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage29_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage30_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage30_U0_full_n : STD_LOGIC;
    signal start_for_one_stage30_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage30_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage31_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage31_U0_full_n : STD_LOGIC;
    signal start_for_one_stage31_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage31_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage32_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage32_U0_full_n : STD_LOGIC;
    signal start_for_one_stage32_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage32_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage33_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage33_U0_full_n : STD_LOGIC;
    signal start_for_one_stage33_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage33_U0_empty_n : STD_LOGIC;
    signal start_for_one_stage34_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage34_U0_full_n : STD_LOGIC;
    signal start_for_one_stage34_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_one_stage34_U0_empty_n : STD_LOGIC;
    signal start_for_Block_ap_fixed_base_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_ap_fixed_base_1_U0_full_n : STD_LOGIC;
    signal start_for_Block_ap_fixed_base_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_ap_fixed_base_1_U0_empty_n : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_start_full_n : STD_LOGIC;
    signal Block_ap_fixed_base_1_U0_start_write : STD_LOGIC;

    component Block_ap_fixed_base_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Stage0_COS_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        Stage0_COS_V_V_full_n : IN STD_LOGIC;
        Stage0_COS_V_V_write : OUT STD_LOGIC;
        Stage0_Sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        Stage0_Sin_V_V_full_n : IN STD_LOGIC;
        Stage0_Sin_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage20 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage22 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage23 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage24 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage25 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage26 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage27 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage28 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage29 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage30 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage31 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage32 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage33 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component one_stage34 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        s_current_cos_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_cos_V_V_empty_n : IN STD_LOGIC;
        s_current_cos_V_V_read : OUT STD_LOGIC;
        s_current_sin_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_sin_V_V_empty_n : IN STD_LOGIC;
        s_current_sin_V_V_read : OUT STD_LOGIC;
        s_current_theta_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        s_current_theta_V_V_empty_n : IN STD_LOGIC;
        s_current_theta_V_V_read : OUT STD_LOGIC;
        s_output_cos_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_cos_V_V_full_n : IN STD_LOGIC;
        s_output_cos_V_V_write : OUT STD_LOGIC;
        s_output_sin_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_sin_V_V_full_n : IN STD_LOGIC;
        s_output_sin_V_V_write : OUT STD_LOGIC;
        s_output_theta_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        s_output_theta_V_V_full_n : IN STD_LOGIC;
        s_output_theta_V_V_write : OUT STD_LOGIC );
    end component;


    component Block_ap_fixed_base_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Theta16_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        Theta16_V_V_empty_n : IN STD_LOGIC;
        Theta16_V_V_read : OUT STD_LOGIC );
    end component;


    component fifo_w10_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stabkb IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stacud IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stadEe IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_staeOg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stafYi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stag8j IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stahbi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_staibs IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stajbC IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stakbM IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stalbW IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stamb6 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_stancg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_one_staocq IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_apcA IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_ap_fixed_base_U0 : component Block_ap_fixed_base_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_ap_fixed_base_U0_ap_start,
        ap_done => Block_ap_fixed_base_U0_ap_done,
        ap_continue => Block_ap_fixed_base_U0_ap_continue,
        ap_idle => Block_ap_fixed_base_U0_ap_idle,
        ap_ready => Block_ap_fixed_base_U0_ap_ready,
        Stage0_COS_V_V_din => Block_ap_fixed_base_U0_Stage0_COS_V_V_din,
        Stage0_COS_V_V_full_n => Stage0_COS_V_V_full_n,
        Stage0_COS_V_V_write => Block_ap_fixed_base_U0_Stage0_COS_V_V_write,
        Stage0_Sin_V_V_din => Block_ap_fixed_base_U0_Stage0_Sin_V_V_din,
        Stage0_Sin_V_V_full_n => Stage0_Sin_V_V_full_n,
        Stage0_Sin_V_V_write => Block_ap_fixed_base_U0_Stage0_Sin_V_V_write);

    one_stage20_U0 : component one_stage20
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage20_U0_ap_start,
        start_full_n => start_for_one_stage21_U0_full_n,
        ap_done => one_stage20_U0_ap_done,
        ap_continue => one_stage20_U0_ap_continue,
        ap_idle => one_stage20_U0_ap_idle,
        ap_ready => one_stage20_U0_ap_ready,
        start_out => one_stage20_U0_start_out,
        start_write => one_stage20_U0_start_write,
        s_current_cos_V_V_dout => Stage0_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage0_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage20_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage0_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage0_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage20_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => in_theta_V_V_dout,
        s_current_theta_V_V_empty_n => in_theta_V_V_empty_n,
        s_current_theta_V_V_read => one_stage20_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage20_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage1_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage20_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage20_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage1_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage20_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage20_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta2_V_V_full_n,
        s_output_theta_V_V_write => one_stage20_U0_s_output_theta_V_V_write);

    one_stage21_U0 : component one_stage21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage21_U0_ap_start,
        start_full_n => start_for_one_stage22_U0_full_n,
        ap_done => one_stage21_U0_ap_done,
        ap_continue => one_stage21_U0_ap_continue,
        ap_idle => one_stage21_U0_ap_idle,
        ap_ready => one_stage21_U0_ap_ready,
        start_out => one_stage21_U0_start_out,
        start_write => one_stage21_U0_start_write,
        s_current_cos_V_V_dout => Stage1_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage1_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage21_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage1_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage1_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage21_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta2_V_V_dout,
        s_current_theta_V_V_empty_n => Theta2_V_V_empty_n,
        s_current_theta_V_V_read => one_stage21_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage21_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage2_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage21_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage21_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage2_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage21_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage21_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta3_V_V_full_n,
        s_output_theta_V_V_write => one_stage21_U0_s_output_theta_V_V_write);

    one_stage22_U0 : component one_stage22
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage22_U0_ap_start,
        start_full_n => start_for_one_stage23_U0_full_n,
        ap_done => one_stage22_U0_ap_done,
        ap_continue => one_stage22_U0_ap_continue,
        ap_idle => one_stage22_U0_ap_idle,
        ap_ready => one_stage22_U0_ap_ready,
        start_out => one_stage22_U0_start_out,
        start_write => one_stage22_U0_start_write,
        s_current_cos_V_V_dout => Stage2_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage2_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage22_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage2_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage2_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage22_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta3_V_V_dout,
        s_current_theta_V_V_empty_n => Theta3_V_V_empty_n,
        s_current_theta_V_V_read => one_stage22_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage22_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage3_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage22_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage22_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage3_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage22_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage22_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta4_V_V_full_n,
        s_output_theta_V_V_write => one_stage22_U0_s_output_theta_V_V_write);

    one_stage23_U0 : component one_stage23
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage23_U0_ap_start,
        start_full_n => start_for_one_stage24_U0_full_n,
        ap_done => one_stage23_U0_ap_done,
        ap_continue => one_stage23_U0_ap_continue,
        ap_idle => one_stage23_U0_ap_idle,
        ap_ready => one_stage23_U0_ap_ready,
        start_out => one_stage23_U0_start_out,
        start_write => one_stage23_U0_start_write,
        s_current_cos_V_V_dout => Stage3_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage3_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage23_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage3_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage3_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage23_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta4_V_V_dout,
        s_current_theta_V_V_empty_n => Theta4_V_V_empty_n,
        s_current_theta_V_V_read => one_stage23_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage23_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage4_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage23_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage23_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage4_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage23_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage23_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta5_V_V_full_n,
        s_output_theta_V_V_write => one_stage23_U0_s_output_theta_V_V_write);

    one_stage24_U0 : component one_stage24
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage24_U0_ap_start,
        start_full_n => start_for_one_stage25_U0_full_n,
        ap_done => one_stage24_U0_ap_done,
        ap_continue => one_stage24_U0_ap_continue,
        ap_idle => one_stage24_U0_ap_idle,
        ap_ready => one_stage24_U0_ap_ready,
        start_out => one_stage24_U0_start_out,
        start_write => one_stage24_U0_start_write,
        s_current_cos_V_V_dout => Stage4_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage4_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage24_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage4_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage4_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage24_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta5_V_V_dout,
        s_current_theta_V_V_empty_n => Theta5_V_V_empty_n,
        s_current_theta_V_V_read => one_stage24_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage24_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage5_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage24_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage24_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage5_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage24_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage24_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta6_V_V_full_n,
        s_output_theta_V_V_write => one_stage24_U0_s_output_theta_V_V_write);

    one_stage25_U0 : component one_stage25
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage25_U0_ap_start,
        start_full_n => start_for_one_stage26_U0_full_n,
        ap_done => one_stage25_U0_ap_done,
        ap_continue => one_stage25_U0_ap_continue,
        ap_idle => one_stage25_U0_ap_idle,
        ap_ready => one_stage25_U0_ap_ready,
        start_out => one_stage25_U0_start_out,
        start_write => one_stage25_U0_start_write,
        s_current_cos_V_V_dout => Stage5_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage5_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage25_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage5_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage5_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage25_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta6_V_V_dout,
        s_current_theta_V_V_empty_n => Theta6_V_V_empty_n,
        s_current_theta_V_V_read => one_stage25_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage25_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage6_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage25_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage25_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage6_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage25_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage25_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta7_V_V_full_n,
        s_output_theta_V_V_write => one_stage25_U0_s_output_theta_V_V_write);

    one_stage26_U0 : component one_stage26
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage26_U0_ap_start,
        start_full_n => start_for_one_stage27_U0_full_n,
        ap_done => one_stage26_U0_ap_done,
        ap_continue => one_stage26_U0_ap_continue,
        ap_idle => one_stage26_U0_ap_idle,
        ap_ready => one_stage26_U0_ap_ready,
        start_out => one_stage26_U0_start_out,
        start_write => one_stage26_U0_start_write,
        s_current_cos_V_V_dout => Stage6_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage6_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage26_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage6_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage6_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage26_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta7_V_V_dout,
        s_current_theta_V_V_empty_n => Theta7_V_V_empty_n,
        s_current_theta_V_V_read => one_stage26_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage26_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage7_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage26_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage26_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage7_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage26_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage26_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta8_V_V_full_n,
        s_output_theta_V_V_write => one_stage26_U0_s_output_theta_V_V_write);

    one_stage27_U0 : component one_stage27
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage27_U0_ap_start,
        start_full_n => start_for_one_stage28_U0_full_n,
        ap_done => one_stage27_U0_ap_done,
        ap_continue => one_stage27_U0_ap_continue,
        ap_idle => one_stage27_U0_ap_idle,
        ap_ready => one_stage27_U0_ap_ready,
        start_out => one_stage27_U0_start_out,
        start_write => one_stage27_U0_start_write,
        s_current_cos_V_V_dout => Stage7_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage7_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage27_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage7_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage7_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage27_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta8_V_V_dout,
        s_current_theta_V_V_empty_n => Theta8_V_V_empty_n,
        s_current_theta_V_V_read => one_stage27_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage27_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage8_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage27_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage27_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage8_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage27_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage27_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta9_V_V_full_n,
        s_output_theta_V_V_write => one_stage27_U0_s_output_theta_V_V_write);

    one_stage28_U0 : component one_stage28
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage28_U0_ap_start,
        start_full_n => start_for_one_stage29_U0_full_n,
        ap_done => one_stage28_U0_ap_done,
        ap_continue => one_stage28_U0_ap_continue,
        ap_idle => one_stage28_U0_ap_idle,
        ap_ready => one_stage28_U0_ap_ready,
        start_out => one_stage28_U0_start_out,
        start_write => one_stage28_U0_start_write,
        s_current_cos_V_V_dout => Stage8_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage8_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage28_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage8_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage8_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage28_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta9_V_V_dout,
        s_current_theta_V_V_empty_n => Theta9_V_V_empty_n,
        s_current_theta_V_V_read => one_stage28_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage28_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage9_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage28_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage28_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage9_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage28_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage28_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta10_V_V_full_n,
        s_output_theta_V_V_write => one_stage28_U0_s_output_theta_V_V_write);

    one_stage29_U0 : component one_stage29
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage29_U0_ap_start,
        start_full_n => start_for_one_stage30_U0_full_n,
        ap_done => one_stage29_U0_ap_done,
        ap_continue => one_stage29_U0_ap_continue,
        ap_idle => one_stage29_U0_ap_idle,
        ap_ready => one_stage29_U0_ap_ready,
        start_out => one_stage29_U0_start_out,
        start_write => one_stage29_U0_start_write,
        s_current_cos_V_V_dout => Stage9_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage9_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage29_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage9_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage9_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage29_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta10_V_V_dout,
        s_current_theta_V_V_empty_n => Theta10_V_V_empty_n,
        s_current_theta_V_V_read => one_stage29_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage29_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage10_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage29_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage29_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage10_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage29_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage29_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta11_V_V_full_n,
        s_output_theta_V_V_write => one_stage29_U0_s_output_theta_V_V_write);

    one_stage30_U0 : component one_stage30
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage30_U0_ap_start,
        start_full_n => start_for_one_stage31_U0_full_n,
        ap_done => one_stage30_U0_ap_done,
        ap_continue => one_stage30_U0_ap_continue,
        ap_idle => one_stage30_U0_ap_idle,
        ap_ready => one_stage30_U0_ap_ready,
        start_out => one_stage30_U0_start_out,
        start_write => one_stage30_U0_start_write,
        s_current_cos_V_V_dout => Stage10_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage10_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage30_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage10_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage10_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage30_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta11_V_V_dout,
        s_current_theta_V_V_empty_n => Theta11_V_V_empty_n,
        s_current_theta_V_V_read => one_stage30_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage30_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage11_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage30_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage30_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage11_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage30_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage30_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta12_V_V_full_n,
        s_output_theta_V_V_write => one_stage30_U0_s_output_theta_V_V_write);

    one_stage31_U0 : component one_stage31
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage31_U0_ap_start,
        start_full_n => start_for_one_stage32_U0_full_n,
        ap_done => one_stage31_U0_ap_done,
        ap_continue => one_stage31_U0_ap_continue,
        ap_idle => one_stage31_U0_ap_idle,
        ap_ready => one_stage31_U0_ap_ready,
        start_out => one_stage31_U0_start_out,
        start_write => one_stage31_U0_start_write,
        s_current_cos_V_V_dout => Stage11_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage11_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage31_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage11_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage11_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage31_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta12_V_V_dout,
        s_current_theta_V_V_empty_n => Theta12_V_V_empty_n,
        s_current_theta_V_V_read => one_stage31_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage31_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage12_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage31_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage31_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage12_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage31_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage31_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta13_V_V_full_n,
        s_output_theta_V_V_write => one_stage31_U0_s_output_theta_V_V_write);

    one_stage32_U0 : component one_stage32
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage32_U0_ap_start,
        start_full_n => start_for_one_stage33_U0_full_n,
        ap_done => one_stage32_U0_ap_done,
        ap_continue => one_stage32_U0_ap_continue,
        ap_idle => one_stage32_U0_ap_idle,
        ap_ready => one_stage32_U0_ap_ready,
        start_out => one_stage32_U0_start_out,
        start_write => one_stage32_U0_start_write,
        s_current_cos_V_V_dout => Stage12_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage12_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage32_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage12_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage12_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage32_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta13_V_V_dout,
        s_current_theta_V_V_empty_n => Theta13_V_V_empty_n,
        s_current_theta_V_V_read => one_stage32_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage32_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage13_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage32_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage32_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage13_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage32_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage32_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta14_V_V_full_n,
        s_output_theta_V_V_write => one_stage32_U0_s_output_theta_V_V_write);

    one_stage33_U0 : component one_stage33
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage33_U0_ap_start,
        start_full_n => start_for_one_stage34_U0_full_n,
        ap_done => one_stage33_U0_ap_done,
        ap_continue => one_stage33_U0_ap_continue,
        ap_idle => one_stage33_U0_ap_idle,
        ap_ready => one_stage33_U0_ap_ready,
        start_out => one_stage33_U0_start_out,
        start_write => one_stage33_U0_start_write,
        s_current_cos_V_V_dout => Stage13_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage13_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage33_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage13_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage13_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage33_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta14_V_V_dout,
        s_current_theta_V_V_empty_n => Theta14_V_V_empty_n,
        s_current_theta_V_V_read => one_stage33_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage33_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => Stage14_COS_V_V_full_n,
        s_output_cos_V_V_write => one_stage33_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage33_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => Stage14_Sin_V_V_full_n,
        s_output_sin_V_V_write => one_stage33_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage33_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta15_V_V_full_n,
        s_output_theta_V_V_write => one_stage33_U0_s_output_theta_V_V_write);

    one_stage34_U0 : component one_stage34
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => one_stage34_U0_ap_start,
        start_full_n => start_for_Block_ap_fixed_base_1_U0_full_n,
        ap_done => one_stage34_U0_ap_done,
        ap_continue => one_stage34_U0_ap_continue,
        ap_idle => one_stage34_U0_ap_idle,
        ap_ready => one_stage34_U0_ap_ready,
        start_out => one_stage34_U0_start_out,
        start_write => one_stage34_U0_start_write,
        s_current_cos_V_V_dout => Stage14_COS_V_V_dout,
        s_current_cos_V_V_empty_n => Stage14_COS_V_V_empty_n,
        s_current_cos_V_V_read => one_stage34_U0_s_current_cos_V_V_read,
        s_current_sin_V_V_dout => Stage14_Sin_V_V_dout,
        s_current_sin_V_V_empty_n => Stage14_Sin_V_V_empty_n,
        s_current_sin_V_V_read => one_stage34_U0_s_current_sin_V_V_read,
        s_current_theta_V_V_dout => Theta15_V_V_dout,
        s_current_theta_V_V_empty_n => Theta15_V_V_empty_n,
        s_current_theta_V_V_read => one_stage34_U0_s_current_theta_V_V_read,
        s_output_cos_V_V_din => one_stage34_U0_s_output_cos_V_V_din,
        s_output_cos_V_V_full_n => out_c_V_V_full_n,
        s_output_cos_V_V_write => one_stage34_U0_s_output_cos_V_V_write,
        s_output_sin_V_V_din => one_stage34_U0_s_output_sin_V_V_din,
        s_output_sin_V_V_full_n => out_s_V_V_full_n,
        s_output_sin_V_V_write => one_stage34_U0_s_output_sin_V_V_write,
        s_output_theta_V_V_din => one_stage34_U0_s_output_theta_V_V_din,
        s_output_theta_V_V_full_n => Theta16_V_V_full_n,
        s_output_theta_V_V_write => one_stage34_U0_s_output_theta_V_V_write);

    Block_ap_fixed_base_1_U0 : component Block_ap_fixed_base_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_ap_fixed_base_1_U0_ap_start,
        ap_done => Block_ap_fixed_base_1_U0_ap_done,
        ap_continue => Block_ap_fixed_base_1_U0_ap_continue,
        ap_idle => Block_ap_fixed_base_1_U0_ap_idle,
        ap_ready => Block_ap_fixed_base_1_U0_ap_ready,
        Theta16_V_V_dout => Theta16_V_V_dout,
        Theta16_V_V_empty_n => Theta16_V_V_empty_n,
        Theta16_V_V_read => Block_ap_fixed_base_1_U0_Theta16_V_V_read);

    Stage0_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ap_fixed_base_U0_Stage0_COS_V_V_din,
        if_full_n => Stage0_COS_V_V_full_n,
        if_write => Block_ap_fixed_base_U0_Stage0_COS_V_V_write,
        if_dout => Stage0_COS_V_V_dout,
        if_empty_n => Stage0_COS_V_V_empty_n,
        if_read => one_stage20_U0_s_current_cos_V_V_read);

    Stage0_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ap_fixed_base_U0_Stage0_Sin_V_V_din,
        if_full_n => Stage0_Sin_V_V_full_n,
        if_write => Block_ap_fixed_base_U0_Stage0_Sin_V_V_write,
        if_dout => Stage0_Sin_V_V_dout,
        if_empty_n => Stage0_Sin_V_V_empty_n,
        if_read => one_stage20_U0_s_current_sin_V_V_read);

    Stage1_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage20_U0_s_output_cos_V_V_din,
        if_full_n => Stage1_COS_V_V_full_n,
        if_write => one_stage20_U0_s_output_cos_V_V_write,
        if_dout => Stage1_COS_V_V_dout,
        if_empty_n => Stage1_COS_V_V_empty_n,
        if_read => one_stage21_U0_s_current_cos_V_V_read);

    Stage1_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage20_U0_s_output_sin_V_V_din,
        if_full_n => Stage1_Sin_V_V_full_n,
        if_write => one_stage20_U0_s_output_sin_V_V_write,
        if_dout => Stage1_Sin_V_V_dout,
        if_empty_n => Stage1_Sin_V_V_empty_n,
        if_read => one_stage21_U0_s_current_sin_V_V_read);

    Theta2_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage20_U0_s_output_theta_V_V_din,
        if_full_n => Theta2_V_V_full_n,
        if_write => one_stage20_U0_s_output_theta_V_V_write,
        if_dout => Theta2_V_V_dout,
        if_empty_n => Theta2_V_V_empty_n,
        if_read => one_stage21_U0_s_current_theta_V_V_read);

    Stage2_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage21_U0_s_output_cos_V_V_din,
        if_full_n => Stage2_COS_V_V_full_n,
        if_write => one_stage21_U0_s_output_cos_V_V_write,
        if_dout => Stage2_COS_V_V_dout,
        if_empty_n => Stage2_COS_V_V_empty_n,
        if_read => one_stage22_U0_s_current_cos_V_V_read);

    Stage2_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage21_U0_s_output_sin_V_V_din,
        if_full_n => Stage2_Sin_V_V_full_n,
        if_write => one_stage21_U0_s_output_sin_V_V_write,
        if_dout => Stage2_Sin_V_V_dout,
        if_empty_n => Stage2_Sin_V_V_empty_n,
        if_read => one_stage22_U0_s_current_sin_V_V_read);

    Theta3_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage21_U0_s_output_theta_V_V_din,
        if_full_n => Theta3_V_V_full_n,
        if_write => one_stage21_U0_s_output_theta_V_V_write,
        if_dout => Theta3_V_V_dout,
        if_empty_n => Theta3_V_V_empty_n,
        if_read => one_stage22_U0_s_current_theta_V_V_read);

    Stage3_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage22_U0_s_output_cos_V_V_din,
        if_full_n => Stage3_COS_V_V_full_n,
        if_write => one_stage22_U0_s_output_cos_V_V_write,
        if_dout => Stage3_COS_V_V_dout,
        if_empty_n => Stage3_COS_V_V_empty_n,
        if_read => one_stage23_U0_s_current_cos_V_V_read);

    Stage3_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage22_U0_s_output_sin_V_V_din,
        if_full_n => Stage3_Sin_V_V_full_n,
        if_write => one_stage22_U0_s_output_sin_V_V_write,
        if_dout => Stage3_Sin_V_V_dout,
        if_empty_n => Stage3_Sin_V_V_empty_n,
        if_read => one_stage23_U0_s_current_sin_V_V_read);

    Theta4_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage22_U0_s_output_theta_V_V_din,
        if_full_n => Theta4_V_V_full_n,
        if_write => one_stage22_U0_s_output_theta_V_V_write,
        if_dout => Theta4_V_V_dout,
        if_empty_n => Theta4_V_V_empty_n,
        if_read => one_stage23_U0_s_current_theta_V_V_read);

    Stage4_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage23_U0_s_output_cos_V_V_din,
        if_full_n => Stage4_COS_V_V_full_n,
        if_write => one_stage23_U0_s_output_cos_V_V_write,
        if_dout => Stage4_COS_V_V_dout,
        if_empty_n => Stage4_COS_V_V_empty_n,
        if_read => one_stage24_U0_s_current_cos_V_V_read);

    Stage4_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage23_U0_s_output_sin_V_V_din,
        if_full_n => Stage4_Sin_V_V_full_n,
        if_write => one_stage23_U0_s_output_sin_V_V_write,
        if_dout => Stage4_Sin_V_V_dout,
        if_empty_n => Stage4_Sin_V_V_empty_n,
        if_read => one_stage24_U0_s_current_sin_V_V_read);

    Theta5_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage23_U0_s_output_theta_V_V_din,
        if_full_n => Theta5_V_V_full_n,
        if_write => one_stage23_U0_s_output_theta_V_V_write,
        if_dout => Theta5_V_V_dout,
        if_empty_n => Theta5_V_V_empty_n,
        if_read => one_stage24_U0_s_current_theta_V_V_read);

    Stage5_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage24_U0_s_output_cos_V_V_din,
        if_full_n => Stage5_COS_V_V_full_n,
        if_write => one_stage24_U0_s_output_cos_V_V_write,
        if_dout => Stage5_COS_V_V_dout,
        if_empty_n => Stage5_COS_V_V_empty_n,
        if_read => one_stage25_U0_s_current_cos_V_V_read);

    Stage5_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage24_U0_s_output_sin_V_V_din,
        if_full_n => Stage5_Sin_V_V_full_n,
        if_write => one_stage24_U0_s_output_sin_V_V_write,
        if_dout => Stage5_Sin_V_V_dout,
        if_empty_n => Stage5_Sin_V_V_empty_n,
        if_read => one_stage25_U0_s_current_sin_V_V_read);

    Theta6_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage24_U0_s_output_theta_V_V_din,
        if_full_n => Theta6_V_V_full_n,
        if_write => one_stage24_U0_s_output_theta_V_V_write,
        if_dout => Theta6_V_V_dout,
        if_empty_n => Theta6_V_V_empty_n,
        if_read => one_stage25_U0_s_current_theta_V_V_read);

    Stage6_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage25_U0_s_output_cos_V_V_din,
        if_full_n => Stage6_COS_V_V_full_n,
        if_write => one_stage25_U0_s_output_cos_V_V_write,
        if_dout => Stage6_COS_V_V_dout,
        if_empty_n => Stage6_COS_V_V_empty_n,
        if_read => one_stage26_U0_s_current_cos_V_V_read);

    Stage6_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage25_U0_s_output_sin_V_V_din,
        if_full_n => Stage6_Sin_V_V_full_n,
        if_write => one_stage25_U0_s_output_sin_V_V_write,
        if_dout => Stage6_Sin_V_V_dout,
        if_empty_n => Stage6_Sin_V_V_empty_n,
        if_read => one_stage26_U0_s_current_sin_V_V_read);

    Theta7_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage25_U0_s_output_theta_V_V_din,
        if_full_n => Theta7_V_V_full_n,
        if_write => one_stage25_U0_s_output_theta_V_V_write,
        if_dout => Theta7_V_V_dout,
        if_empty_n => Theta7_V_V_empty_n,
        if_read => one_stage26_U0_s_current_theta_V_V_read);

    Stage7_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage26_U0_s_output_cos_V_V_din,
        if_full_n => Stage7_COS_V_V_full_n,
        if_write => one_stage26_U0_s_output_cos_V_V_write,
        if_dout => Stage7_COS_V_V_dout,
        if_empty_n => Stage7_COS_V_V_empty_n,
        if_read => one_stage27_U0_s_current_cos_V_V_read);

    Stage7_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage26_U0_s_output_sin_V_V_din,
        if_full_n => Stage7_Sin_V_V_full_n,
        if_write => one_stage26_U0_s_output_sin_V_V_write,
        if_dout => Stage7_Sin_V_V_dout,
        if_empty_n => Stage7_Sin_V_V_empty_n,
        if_read => one_stage27_U0_s_current_sin_V_V_read);

    Theta8_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage26_U0_s_output_theta_V_V_din,
        if_full_n => Theta8_V_V_full_n,
        if_write => one_stage26_U0_s_output_theta_V_V_write,
        if_dout => Theta8_V_V_dout,
        if_empty_n => Theta8_V_V_empty_n,
        if_read => one_stage27_U0_s_current_theta_V_V_read);

    Stage8_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage27_U0_s_output_cos_V_V_din,
        if_full_n => Stage8_COS_V_V_full_n,
        if_write => one_stage27_U0_s_output_cos_V_V_write,
        if_dout => Stage8_COS_V_V_dout,
        if_empty_n => Stage8_COS_V_V_empty_n,
        if_read => one_stage28_U0_s_current_cos_V_V_read);

    Stage8_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage27_U0_s_output_sin_V_V_din,
        if_full_n => Stage8_Sin_V_V_full_n,
        if_write => one_stage27_U0_s_output_sin_V_V_write,
        if_dout => Stage8_Sin_V_V_dout,
        if_empty_n => Stage8_Sin_V_V_empty_n,
        if_read => one_stage28_U0_s_current_sin_V_V_read);

    Theta9_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage27_U0_s_output_theta_V_V_din,
        if_full_n => Theta9_V_V_full_n,
        if_write => one_stage27_U0_s_output_theta_V_V_write,
        if_dout => Theta9_V_V_dout,
        if_empty_n => Theta9_V_V_empty_n,
        if_read => one_stage28_U0_s_current_theta_V_V_read);

    Stage9_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage28_U0_s_output_cos_V_V_din,
        if_full_n => Stage9_COS_V_V_full_n,
        if_write => one_stage28_U0_s_output_cos_V_V_write,
        if_dout => Stage9_COS_V_V_dout,
        if_empty_n => Stage9_COS_V_V_empty_n,
        if_read => one_stage29_U0_s_current_cos_V_V_read);

    Stage9_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage28_U0_s_output_sin_V_V_din,
        if_full_n => Stage9_Sin_V_V_full_n,
        if_write => one_stage28_U0_s_output_sin_V_V_write,
        if_dout => Stage9_Sin_V_V_dout,
        if_empty_n => Stage9_Sin_V_V_empty_n,
        if_read => one_stage29_U0_s_current_sin_V_V_read);

    Theta10_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage28_U0_s_output_theta_V_V_din,
        if_full_n => Theta10_V_V_full_n,
        if_write => one_stage28_U0_s_output_theta_V_V_write,
        if_dout => Theta10_V_V_dout,
        if_empty_n => Theta10_V_V_empty_n,
        if_read => one_stage29_U0_s_current_theta_V_V_read);

    Stage10_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage29_U0_s_output_cos_V_V_din,
        if_full_n => Stage10_COS_V_V_full_n,
        if_write => one_stage29_U0_s_output_cos_V_V_write,
        if_dout => Stage10_COS_V_V_dout,
        if_empty_n => Stage10_COS_V_V_empty_n,
        if_read => one_stage30_U0_s_current_cos_V_V_read);

    Stage10_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage29_U0_s_output_sin_V_V_din,
        if_full_n => Stage10_Sin_V_V_full_n,
        if_write => one_stage29_U0_s_output_sin_V_V_write,
        if_dout => Stage10_Sin_V_V_dout,
        if_empty_n => Stage10_Sin_V_V_empty_n,
        if_read => one_stage30_U0_s_current_sin_V_V_read);

    Theta11_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage29_U0_s_output_theta_V_V_din,
        if_full_n => Theta11_V_V_full_n,
        if_write => one_stage29_U0_s_output_theta_V_V_write,
        if_dout => Theta11_V_V_dout,
        if_empty_n => Theta11_V_V_empty_n,
        if_read => one_stage30_U0_s_current_theta_V_V_read);

    Stage11_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage30_U0_s_output_cos_V_V_din,
        if_full_n => Stage11_COS_V_V_full_n,
        if_write => one_stage30_U0_s_output_cos_V_V_write,
        if_dout => Stage11_COS_V_V_dout,
        if_empty_n => Stage11_COS_V_V_empty_n,
        if_read => one_stage31_U0_s_current_cos_V_V_read);

    Stage11_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage30_U0_s_output_sin_V_V_din,
        if_full_n => Stage11_Sin_V_V_full_n,
        if_write => one_stage30_U0_s_output_sin_V_V_write,
        if_dout => Stage11_Sin_V_V_dout,
        if_empty_n => Stage11_Sin_V_V_empty_n,
        if_read => one_stage31_U0_s_current_sin_V_V_read);

    Theta12_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage30_U0_s_output_theta_V_V_din,
        if_full_n => Theta12_V_V_full_n,
        if_write => one_stage30_U0_s_output_theta_V_V_write,
        if_dout => Theta12_V_V_dout,
        if_empty_n => Theta12_V_V_empty_n,
        if_read => one_stage31_U0_s_current_theta_V_V_read);

    Stage12_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage31_U0_s_output_cos_V_V_din,
        if_full_n => Stage12_COS_V_V_full_n,
        if_write => one_stage31_U0_s_output_cos_V_V_write,
        if_dout => Stage12_COS_V_V_dout,
        if_empty_n => Stage12_COS_V_V_empty_n,
        if_read => one_stage32_U0_s_current_cos_V_V_read);

    Stage12_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage31_U0_s_output_sin_V_V_din,
        if_full_n => Stage12_Sin_V_V_full_n,
        if_write => one_stage31_U0_s_output_sin_V_V_write,
        if_dout => Stage12_Sin_V_V_dout,
        if_empty_n => Stage12_Sin_V_V_empty_n,
        if_read => one_stage32_U0_s_current_sin_V_V_read);

    Theta13_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage31_U0_s_output_theta_V_V_din,
        if_full_n => Theta13_V_V_full_n,
        if_write => one_stage31_U0_s_output_theta_V_V_write,
        if_dout => Theta13_V_V_dout,
        if_empty_n => Theta13_V_V_empty_n,
        if_read => one_stage32_U0_s_current_theta_V_V_read);

    Stage13_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage32_U0_s_output_cos_V_V_din,
        if_full_n => Stage13_COS_V_V_full_n,
        if_write => one_stage32_U0_s_output_cos_V_V_write,
        if_dout => Stage13_COS_V_V_dout,
        if_empty_n => Stage13_COS_V_V_empty_n,
        if_read => one_stage33_U0_s_current_cos_V_V_read);

    Stage13_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage32_U0_s_output_sin_V_V_din,
        if_full_n => Stage13_Sin_V_V_full_n,
        if_write => one_stage32_U0_s_output_sin_V_V_write,
        if_dout => Stage13_Sin_V_V_dout,
        if_empty_n => Stage13_Sin_V_V_empty_n,
        if_read => one_stage33_U0_s_current_sin_V_V_read);

    Theta14_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage32_U0_s_output_theta_V_V_din,
        if_full_n => Theta14_V_V_full_n,
        if_write => one_stage32_U0_s_output_theta_V_V_write,
        if_dout => Theta14_V_V_dout,
        if_empty_n => Theta14_V_V_empty_n,
        if_read => one_stage33_U0_s_current_theta_V_V_read);

    Stage14_COS_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage33_U0_s_output_cos_V_V_din,
        if_full_n => Stage14_COS_V_V_full_n,
        if_write => one_stage33_U0_s_output_cos_V_V_write,
        if_dout => Stage14_COS_V_V_dout,
        if_empty_n => Stage14_COS_V_V_empty_n,
        if_read => one_stage34_U0_s_current_cos_V_V_read);

    Stage14_Sin_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage33_U0_s_output_sin_V_V_din,
        if_full_n => Stage14_Sin_V_V_full_n,
        if_write => one_stage33_U0_s_output_sin_V_V_write,
        if_dout => Stage14_Sin_V_V_dout,
        if_empty_n => Stage14_Sin_V_V_empty_n,
        if_read => one_stage34_U0_s_current_sin_V_V_read);

    Theta15_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage33_U0_s_output_theta_V_V_din,
        if_full_n => Theta15_V_V_full_n,
        if_write => one_stage33_U0_s_output_theta_V_V_write,
        if_dout => Theta15_V_V_dout,
        if_empty_n => Theta15_V_V_empty_n,
        if_read => one_stage34_U0_s_current_theta_V_V_read);

    Theta16_V_V_U : component fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => one_stage34_U0_s_output_theta_V_V_din,
        if_full_n => Theta16_V_V_full_n,
        if_write => one_stage34_U0_s_output_theta_V_V_write,
        if_dout => Theta16_V_V_dout,
        if_empty_n => Theta16_V_V_empty_n,
        if_read => Block_ap_fixed_base_1_U0_Theta16_V_V_read);

    start_for_one_stabkb_U : component start_for_one_stabkb
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage21_U0_din,
        if_full_n => start_for_one_stage21_U0_full_n,
        if_write => one_stage20_U0_start_write,
        if_dout => start_for_one_stage21_U0_dout,
        if_empty_n => start_for_one_stage21_U0_empty_n,
        if_read => one_stage21_U0_ap_ready);

    start_for_one_stacud_U : component start_for_one_stacud
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage22_U0_din,
        if_full_n => start_for_one_stage22_U0_full_n,
        if_write => one_stage21_U0_start_write,
        if_dout => start_for_one_stage22_U0_dout,
        if_empty_n => start_for_one_stage22_U0_empty_n,
        if_read => one_stage22_U0_ap_ready);

    start_for_one_stadEe_U : component start_for_one_stadEe
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage23_U0_din,
        if_full_n => start_for_one_stage23_U0_full_n,
        if_write => one_stage22_U0_start_write,
        if_dout => start_for_one_stage23_U0_dout,
        if_empty_n => start_for_one_stage23_U0_empty_n,
        if_read => one_stage23_U0_ap_ready);

    start_for_one_staeOg_U : component start_for_one_staeOg
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage24_U0_din,
        if_full_n => start_for_one_stage24_U0_full_n,
        if_write => one_stage23_U0_start_write,
        if_dout => start_for_one_stage24_U0_dout,
        if_empty_n => start_for_one_stage24_U0_empty_n,
        if_read => one_stage24_U0_ap_ready);

    start_for_one_stafYi_U : component start_for_one_stafYi
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage25_U0_din,
        if_full_n => start_for_one_stage25_U0_full_n,
        if_write => one_stage24_U0_start_write,
        if_dout => start_for_one_stage25_U0_dout,
        if_empty_n => start_for_one_stage25_U0_empty_n,
        if_read => one_stage25_U0_ap_ready);

    start_for_one_stag8j_U : component start_for_one_stag8j
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage26_U0_din,
        if_full_n => start_for_one_stage26_U0_full_n,
        if_write => one_stage25_U0_start_write,
        if_dout => start_for_one_stage26_U0_dout,
        if_empty_n => start_for_one_stage26_U0_empty_n,
        if_read => one_stage26_U0_ap_ready);

    start_for_one_stahbi_U : component start_for_one_stahbi
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage27_U0_din,
        if_full_n => start_for_one_stage27_U0_full_n,
        if_write => one_stage26_U0_start_write,
        if_dout => start_for_one_stage27_U0_dout,
        if_empty_n => start_for_one_stage27_U0_empty_n,
        if_read => one_stage27_U0_ap_ready);

    start_for_one_staibs_U : component start_for_one_staibs
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage28_U0_din,
        if_full_n => start_for_one_stage28_U0_full_n,
        if_write => one_stage27_U0_start_write,
        if_dout => start_for_one_stage28_U0_dout,
        if_empty_n => start_for_one_stage28_U0_empty_n,
        if_read => one_stage28_U0_ap_ready);

    start_for_one_stajbC_U : component start_for_one_stajbC
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage29_U0_din,
        if_full_n => start_for_one_stage29_U0_full_n,
        if_write => one_stage28_U0_start_write,
        if_dout => start_for_one_stage29_U0_dout,
        if_empty_n => start_for_one_stage29_U0_empty_n,
        if_read => one_stage29_U0_ap_ready);

    start_for_one_stakbM_U : component start_for_one_stakbM
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage30_U0_din,
        if_full_n => start_for_one_stage30_U0_full_n,
        if_write => one_stage29_U0_start_write,
        if_dout => start_for_one_stage30_U0_dout,
        if_empty_n => start_for_one_stage30_U0_empty_n,
        if_read => one_stage30_U0_ap_ready);

    start_for_one_stalbW_U : component start_for_one_stalbW
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage31_U0_din,
        if_full_n => start_for_one_stage31_U0_full_n,
        if_write => one_stage30_U0_start_write,
        if_dout => start_for_one_stage31_U0_dout,
        if_empty_n => start_for_one_stage31_U0_empty_n,
        if_read => one_stage31_U0_ap_ready);

    start_for_one_stamb6_U : component start_for_one_stamb6
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage32_U0_din,
        if_full_n => start_for_one_stage32_U0_full_n,
        if_write => one_stage31_U0_start_write,
        if_dout => start_for_one_stage32_U0_dout,
        if_empty_n => start_for_one_stage32_U0_empty_n,
        if_read => one_stage32_U0_ap_ready);

    start_for_one_stancg_U : component start_for_one_stancg
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage33_U0_din,
        if_full_n => start_for_one_stage33_U0_full_n,
        if_write => one_stage32_U0_start_write,
        if_dout => start_for_one_stage33_U0_dout,
        if_empty_n => start_for_one_stage33_U0_empty_n,
        if_read => one_stage33_U0_ap_ready);

    start_for_one_staocq_U : component start_for_one_staocq
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_one_stage34_U0_din,
        if_full_n => start_for_one_stage34_U0_full_n,
        if_write => one_stage33_U0_start_write,
        if_dout => start_for_one_stage34_U0_dout,
        if_empty_n => start_for_one_stage34_U0_empty_n,
        if_read => one_stage34_U0_ap_ready);

    start_for_Block_apcA_U : component start_for_Block_apcA
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_ap_fixed_base_1_U0_din,
        if_full_n => start_for_Block_ap_fixed_base_1_U0_full_n,
        if_write => one_stage34_U0_start_write,
        if_dout => start_for_Block_ap_fixed_base_1_U0_dout,
        if_empty_n => start_for_Block_ap_fixed_base_1_U0_empty_n,
        if_read => Block_ap_fixed_base_1_U0_ap_ready);





    ap_sync_reg_Block_ap_fixed_base_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Block_ap_fixed_base_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_ap_fixed_base_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_ap_fixed_base_U0_ap_ready <= ap_sync_Block_ap_fixed_base_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_one_stage20_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_one_stage20_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_one_stage20_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_one_stage20_U0_ap_ready <= ap_sync_one_stage20_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    Block_ap_fixed_base_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Block_ap_fixed_base_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Block_ap_fixed_base_U0_ap_ready_count <= std_logic_vector(unsigned(Block_ap_fixed_base_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = Block_ap_fixed_base_U0_ap_ready))) then 
                Block_ap_fixed_base_U0_ap_ready_count <= std_logic_vector(unsigned(Block_ap_fixed_base_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    one_stage20_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((one_stage20_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                one_stage20_U0_ap_ready_count <= std_logic_vector(unsigned(one_stage20_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (one_stage20_U0_ap_ready = ap_const_logic_1))) then 
                one_stage20_U0_ap_ready_count <= std_logic_vector(unsigned(one_stage20_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    Block_ap_fixed_base_1_U0_ap_continue <= ap_sync_done;
    Block_ap_fixed_base_1_U0_ap_start <= start_for_Block_ap_fixed_base_1_U0_empty_n;
    Block_ap_fixed_base_1_U0_start_full_n <= ap_const_logic_1;
    Block_ap_fixed_base_1_U0_start_write <= ap_const_logic_0;
    Block_ap_fixed_base_U0_ap_continue <= ap_const_logic_1;
    Block_ap_fixed_base_U0_ap_start <= ((ap_sync_reg_Block_ap_fixed_base_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_ap_fixed_base_U0_start_full_n <= ap_const_logic_1;
    Block_ap_fixed_base_U0_start_write <= ap_const_logic_0;
    ap_done <= ap_sync_done;
    ap_idle <= (one_stage34_U0_ap_idle and one_stage33_U0_ap_idle and one_stage32_U0_ap_idle and one_stage31_U0_ap_idle and one_stage30_U0_ap_idle and one_stage29_U0_ap_idle and one_stage28_U0_ap_idle and one_stage27_U0_ap_idle and one_stage26_U0_ap_idle and one_stage25_U0_ap_idle and one_stage24_U0_ap_idle and one_stage23_U0_ap_idle and one_stage22_U0_ap_idle and one_stage21_U0_ap_idle and one_stage20_U0_ap_idle and Block_ap_fixed_base_U0_ap_idle and Block_ap_fixed_base_1_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_Block_ap_fixed_base_U0_ap_ready <= (ap_sync_reg_Block_ap_fixed_base_U0_ap_ready or Block_ap_fixed_base_U0_ap_ready);
    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (one_stage34_U0_ap_done and Block_ap_fixed_base_1_U0_ap_done);
    ap_sync_one_stage20_U0_ap_ready <= (one_stage20_U0_ap_ready or ap_sync_reg_one_stage20_U0_ap_ready);
    ap_sync_ready <= (ap_sync_one_stage20_U0_ap_ready and ap_sync_Block_ap_fixed_base_U0_ap_ready);
    in_theta_V_V_read <= one_stage20_U0_s_current_theta_V_V_read;
    one_stage20_U0_ap_continue <= ap_const_logic_1;
    one_stage20_U0_ap_start <= ((ap_sync_reg_one_stage20_U0_ap_ready xor ap_const_logic_1) and ap_start);
    one_stage21_U0_ap_continue <= ap_const_logic_1;
    one_stage21_U0_ap_start <= start_for_one_stage21_U0_empty_n;
    one_stage22_U0_ap_continue <= ap_const_logic_1;
    one_stage22_U0_ap_start <= start_for_one_stage22_U0_empty_n;
    one_stage23_U0_ap_continue <= ap_const_logic_1;
    one_stage23_U0_ap_start <= start_for_one_stage23_U0_empty_n;
    one_stage24_U0_ap_continue <= ap_const_logic_1;
    one_stage24_U0_ap_start <= start_for_one_stage24_U0_empty_n;
    one_stage25_U0_ap_continue <= ap_const_logic_1;
    one_stage25_U0_ap_start <= start_for_one_stage25_U0_empty_n;
    one_stage26_U0_ap_continue <= ap_const_logic_1;
    one_stage26_U0_ap_start <= start_for_one_stage26_U0_empty_n;
    one_stage27_U0_ap_continue <= ap_const_logic_1;
    one_stage27_U0_ap_start <= start_for_one_stage27_U0_empty_n;
    one_stage28_U0_ap_continue <= ap_const_logic_1;
    one_stage28_U0_ap_start <= start_for_one_stage28_U0_empty_n;
    one_stage29_U0_ap_continue <= ap_const_logic_1;
    one_stage29_U0_ap_start <= start_for_one_stage29_U0_empty_n;
    one_stage30_U0_ap_continue <= ap_const_logic_1;
    one_stage30_U0_ap_start <= start_for_one_stage30_U0_empty_n;
    one_stage31_U0_ap_continue <= ap_const_logic_1;
    one_stage31_U0_ap_start <= start_for_one_stage31_U0_empty_n;
    one_stage32_U0_ap_continue <= ap_const_logic_1;
    one_stage32_U0_ap_start <= start_for_one_stage32_U0_empty_n;
    one_stage33_U0_ap_continue <= ap_const_logic_1;
    one_stage33_U0_ap_start <= start_for_one_stage33_U0_empty_n;
    one_stage34_U0_ap_continue <= ap_sync_done;
    one_stage34_U0_ap_start <= start_for_one_stage34_U0_empty_n;
    out_c_V_V_din <= one_stage34_U0_s_output_cos_V_V_din;
    out_c_V_V_write <= one_stage34_U0_s_output_cos_V_V_write;
    out_s_V_V_din <= one_stage34_U0_s_output_sin_V_V_din;
    out_s_V_V_write <= one_stage34_U0_s_output_sin_V_V_write;
    start_for_Block_ap_fixed_base_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage21_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage22_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage23_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage24_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage25_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage26_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage27_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage28_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage29_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage30_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage31_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage32_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage33_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_one_stage34_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
