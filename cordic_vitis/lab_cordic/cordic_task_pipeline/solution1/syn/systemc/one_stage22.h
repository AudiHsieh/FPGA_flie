// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _one_stage22_HH_
#define _one_stage22_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct one_stage22 : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<10> > s_current_cos_V_V_dout;
    sc_in< sc_logic > s_current_cos_V_V_empty_n;
    sc_out< sc_logic > s_current_cos_V_V_read;
    sc_in< sc_lv<10> > s_current_sin_V_V_dout;
    sc_in< sc_logic > s_current_sin_V_V_empty_n;
    sc_out< sc_logic > s_current_sin_V_V_read;
    sc_in< sc_lv<10> > s_current_theta_V_V_dout;
    sc_in< sc_logic > s_current_theta_V_V_empty_n;
    sc_out< sc_logic > s_current_theta_V_V_read;
    sc_out< sc_lv<10> > s_output_cos_V_V_din;
    sc_in< sc_logic > s_output_cos_V_V_full_n;
    sc_out< sc_logic > s_output_cos_V_V_write;
    sc_out< sc_lv<10> > s_output_sin_V_V_din;
    sc_in< sc_logic > s_output_sin_V_V_full_n;
    sc_out< sc_logic > s_output_sin_V_V_write;
    sc_out< sc_lv<10> > s_output_theta_V_V_din;
    sc_in< sc_logic > s_output_theta_V_V_full_n;
    sc_out< sc_logic > s_output_theta_V_V_write;


    // Module declarations
    one_stage22(sc_module_name name);
    SC_HAS_PROCESS(one_stage22);

    ~one_stage22();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > s_current_cos_V_V_blk_n;
    sc_signal< sc_logic > s_current_sin_V_V_blk_n;
    sc_signal< sc_logic > s_current_theta_V_V_blk_n;
    sc_signal< sc_logic > s_output_cos_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_reg_175;
    sc_signal< sc_logic > s_output_sin_V_V_blk_n;
    sc_signal< sc_logic > s_output_theta_V_V_blk_n;
    sc_signal< sc_lv<10> > tmp_V_122_reg_145;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<10> > tmp_V_123_reg_151;
    sc_signal< sc_lv<10> > tmp_V_124_reg_157;
    sc_signal< sc_lv<10> > r_V_fu_87_p1;
    sc_signal< sc_lv<10> > r_V_reg_163;
    sc_signal< sc_lv<10> > r_V_13_fu_101_p1;
    sc_signal< sc_lv<10> > r_V_13_reg_169;
    sc_signal< sc_lv<10> > c_V_fu_113_p2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<10> > c_V_13_fu_129_p2;
    sc_signal< sc_lv<10> > s_V_fu_118_p2;
    sc_signal< sc_lv<10> > s_V_13_fu_134_p2;
    sc_signal< sc_lv<10> > t_V_fu_123_p2;
    sc_signal< sc_lv<10> > t_V_7_fu_139_p2;
    sc_signal< sc_lv<8> > trunc_ln_fu_77_p4;
    sc_signal< sc_lv<8> > trunc_ln1333_s_fu_91_p4;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_condition_122;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<10> ap_const_lv10_383;
    static const sc_lv<10> ap_const_lv10_7D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_condition_122();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V_13_fu_129_p2();
    void thread_c_V_fu_113_p2();
    void thread_internal_ap_ready();
    void thread_r_V_13_fu_101_p1();
    void thread_r_V_fu_87_p1();
    void thread_real_start();
    void thread_s_V_13_fu_134_p2();
    void thread_s_V_fu_118_p2();
    void thread_s_current_cos_V_V_blk_n();
    void thread_s_current_cos_V_V_read();
    void thread_s_current_sin_V_V_blk_n();
    void thread_s_current_sin_V_V_read();
    void thread_s_current_theta_V_V_blk_n();
    void thread_s_current_theta_V_V_read();
    void thread_s_output_cos_V_V_blk_n();
    void thread_s_output_cos_V_V_din();
    void thread_s_output_cos_V_V_write();
    void thread_s_output_sin_V_V_blk_n();
    void thread_s_output_sin_V_V_din();
    void thread_s_output_sin_V_V_write();
    void thread_s_output_theta_V_V_blk_n();
    void thread_s_output_theta_V_V_din();
    void thread_s_output_theta_V_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_t_V_7_fu_139_p2();
    void thread_t_V_fu_123_p2();
    void thread_trunc_ln1333_s_fu_91_p4();
    void thread_trunc_ln_fu_77_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
