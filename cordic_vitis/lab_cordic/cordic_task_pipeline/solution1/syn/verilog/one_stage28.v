// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module one_stage28 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        s_current_cos_V_V_dout,
        s_current_cos_V_V_empty_n,
        s_current_cos_V_V_read,
        s_current_sin_V_V_dout,
        s_current_sin_V_V_empty_n,
        s_current_sin_V_V_read,
        s_current_theta_V_V_dout,
        s_current_theta_V_V_empty_n,
        s_current_theta_V_V_read,
        s_output_cos_V_V_din,
        s_output_cos_V_V_full_n,
        s_output_cos_V_V_write,
        s_output_sin_V_V_din,
        s_output_sin_V_V_full_n,
        s_output_sin_V_V_write,
        s_output_theta_V_V_din,
        s_output_theta_V_V_full_n,
        s_output_theta_V_V_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [9:0] s_current_cos_V_V_dout;
input   s_current_cos_V_V_empty_n;
output   s_current_cos_V_V_read;
input  [9:0] s_current_sin_V_V_dout;
input   s_current_sin_V_V_empty_n;
output   s_current_sin_V_V_read;
input  [9:0] s_current_theta_V_V_dout;
input   s_current_theta_V_V_empty_n;
output   s_current_theta_V_V_read;
output  [9:0] s_output_cos_V_V_din;
input   s_output_cos_V_V_full_n;
output   s_output_cos_V_V_write;
output  [9:0] s_output_sin_V_V_din;
input   s_output_sin_V_V_full_n;
output   s_output_sin_V_V_write;
output  [9:0] s_output_theta_V_V_din;
input   s_output_theta_V_V_full_n;
output   s_output_theta_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg s_current_cos_V_V_read;
reg s_current_sin_V_V_read;
reg s_current_theta_V_V_read;
reg[9:0] s_output_cos_V_V_din;
reg s_output_cos_V_V_write;
reg[9:0] s_output_sin_V_V_din;
reg s_output_sin_V_V_write;
reg[9:0] s_output_theta_V_V_din;
reg s_output_theta_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    s_current_cos_V_V_blk_n;
reg    s_current_sin_V_V_blk_n;
reg    s_current_theta_V_V_blk_n;
reg    s_output_cos_V_V_blk_n;
wire    ap_CS_fsm_state2;
reg   [0:0] tmp_reg_177;
reg    s_output_sin_V_V_blk_n;
reg    s_output_theta_V_V_blk_n;
reg   [9:0] tmp_V_62_reg_147;
reg    ap_block_state1;
reg   [9:0] tmp_V_63_reg_153;
reg   [9:0] tmp_V_64_reg_159;
wire  signed [9:0] r_V_fu_89_p1;
reg  signed [9:0] r_V_reg_165;
wire  signed [9:0] r_V_7_fu_103_p1;
reg  signed [9:0] r_V_7_reg_171;
wire   [9:0] c_V_fu_115_p2;
reg    ap_block_state2;
wire   [9:0] c_V_7_fu_131_p2;
wire   [9:0] s_V_fu_120_p2;
wire   [9:0] s_V_7_fu_136_p2;
wire   [9:0] t_V_fu_125_p2;
wire   [9:0] t_V_1_fu_141_p2;
wire   [1:0] trunc_ln_fu_79_p4;
wire   [1:0] trunc_ln1333_7_fu_93_p4;
reg   [1:0] ap_NS_fsm;
reg    ap_condition_122;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (s_current_theta_V_V_empty_n == 1'b0) | (s_current_sin_V_V_empty_n == 1'b0) | (s_current_cos_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_V_7_reg_171 <= r_V_7_fu_103_p1;
        r_V_reg_165 <= r_V_fu_89_p1;
        tmp_V_62_reg_147 <= s_current_cos_V_V_dout;
        tmp_V_63_reg_153 <= s_current_sin_V_V_dout;
        tmp_V_64_reg_159 <= s_current_theta_V_V_dout;
        tmp_reg_177 <= s_current_theta_V_V_dout[32'd9];
    end
end

always @ (*) begin
    if ((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_current_cos_V_V_blk_n = s_current_cos_V_V_empty_n;
    end else begin
        s_current_cos_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (s_current_theta_V_V_empty_n == 1'b0) | (s_current_sin_V_V_empty_n == 1'b0) | (s_current_cos_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_current_cos_V_V_read = 1'b1;
    end else begin
        s_current_cos_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_current_sin_V_V_blk_n = s_current_sin_V_V_empty_n;
    end else begin
        s_current_sin_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (s_current_theta_V_V_empty_n == 1'b0) | (s_current_sin_V_V_empty_n == 1'b0) | (s_current_cos_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_current_sin_V_V_read = 1'b1;
    end else begin
        s_current_sin_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_current_theta_V_V_blk_n = s_current_theta_V_V_empty_n;
    end else begin
        s_current_theta_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (s_current_theta_V_V_empty_n == 1'b0) | (s_current_sin_V_V_empty_n == 1'b0) | (s_current_cos_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        s_current_theta_V_V_read = 1'b1;
    end else begin
        s_current_theta_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_177 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_output_cos_V_V_blk_n = s_output_cos_V_V_full_n;
    end else begin
        s_output_cos_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_122)) begin
        if ((tmp_reg_177 == 1'd1)) begin
            s_output_cos_V_V_din = c_V_7_fu_131_p2;
        end else if ((tmp_reg_177 == 1'd0)) begin
            s_output_cos_V_V_din = c_V_fu_115_p2;
        end else begin
            s_output_cos_V_V_din = 'bx;
        end
    end else begin
        s_output_cos_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (tmp_reg_177 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (tmp_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_output_cos_V_V_write = 1'b1;
    end else begin
        s_output_cos_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_177 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_output_sin_V_V_blk_n = s_output_sin_V_V_full_n;
    end else begin
        s_output_sin_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_122)) begin
        if ((tmp_reg_177 == 1'd1)) begin
            s_output_sin_V_V_din = s_V_7_fu_136_p2;
        end else if ((tmp_reg_177 == 1'd0)) begin
            s_output_sin_V_V_din = s_V_fu_120_p2;
        end else begin
            s_output_sin_V_V_din = 'bx;
        end
    end else begin
        s_output_sin_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (tmp_reg_177 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (tmp_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_output_sin_V_V_write = 1'b1;
    end else begin
        s_output_sin_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_177 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_output_theta_V_V_blk_n = s_output_theta_V_V_full_n;
    end else begin
        s_output_theta_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_122)) begin
        if ((tmp_reg_177 == 1'd1)) begin
            s_output_theta_V_V_din = t_V_1_fu_141_p2;
        end else if ((tmp_reg_177 == 1'd0)) begin
            s_output_theta_V_V_din = t_V_fu_125_p2;
        end else begin
            s_output_theta_V_V_din = 'bx;
        end
    end else begin
        s_output_theta_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (tmp_reg_177 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (tmp_reg_177 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_output_theta_V_V_write = 1'b1;
    end else begin
        s_output_theta_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (s_current_theta_V_V_empty_n == 1'b0) | (s_current_sin_V_V_empty_n == 1'b0) | (s_current_cos_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (s_current_theta_V_V_empty_n == 1'b0) | (s_current_sin_V_V_empty_n == 1'b0) | (s_current_cos_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = (((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_122 = (~(((tmp_reg_177 == 1'd1) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd1) & (s_output_cos_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_theta_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_sin_V_V_full_n == 1'b0)) | ((tmp_reg_177 == 1'd0) & (s_output_cos_V_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state2));
end

assign ap_ready = internal_ap_ready;

assign c_V_7_fu_131_p2 = ($signed(tmp_V_62_reg_147) + $signed(r_V_7_reg_171));

assign c_V_fu_115_p2 = ($signed(tmp_V_62_reg_147) - $signed(r_V_7_reg_171));

assign r_V_7_fu_103_p1 = $signed(trunc_ln1333_7_fu_93_p4);

assign r_V_fu_89_p1 = $signed(trunc_ln_fu_79_p4);

assign s_V_7_fu_136_p2 = ($signed(tmp_V_63_reg_153) - $signed(r_V_reg_165));

assign s_V_fu_120_p2 = ($signed(tmp_V_63_reg_153) + $signed(r_V_reg_165));

assign start_out = real_start;

assign t_V_1_fu_141_p2 = (tmp_V_64_reg_159 + 10'd1);

assign t_V_fu_125_p2 = ($signed(tmp_V_64_reg_159) + $signed(10'd1023));

assign trunc_ln1333_7_fu_93_p4 = {{s_current_sin_V_V_dout[9:8]}};

assign trunc_ln_fu_79_p4 = {{s_current_cos_V_V_dout[9:8]}};

endmodule //one_stage28
