

================================================================
== Vitis HLS Report for 'histogram_map_Pipeline_VITIS_LOOP_10_2'
================================================================
* Date:           Thu Jun  9 19:58:57 2022

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:33 MDT 2021)
* Project:        Prefix
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.727 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      516|      516|  5.160 us|  5.160 us|  516|  516|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_10_2  |      514|      514|         4|          1|          1|   512|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.35>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%old_1 = alloca i32 1"   --->   Operation 7 'alloca' 'old_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1"   --->   Operation 8 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 9 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %inputA, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%old_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %old"   --->   Operation 11 'read' 'old_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.70ns)   --->   "%store_ln0 = store i32 0, i32 %acc"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%store_ln0 = store i10 0, i10 %i_1"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %old_read, i32 %old_1"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i = load i10 %i_1" [histogram_parallel.cpp:12]   --->   Operation 16 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.77ns)   --->   "%icmp_ln10 = icmp_eq  i10 %i, i10 512" [histogram_parallel.cpp:10]   --->   Operation 17 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.73ns)   --->   "%add_ln10 = add i10 %i, i10 1" [histogram_parallel.cpp:10]   --->   Operation 18 'add' 'add_ln10' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %icmp_ln10, void %.split, void %.exitStub" [histogram_parallel.cpp:10]   --->   Operation 19 'br' 'br_ln10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln12 = trunc i10 %i" [histogram_parallel.cpp:12]   --->   Operation 20 'trunc' 'trunc_ln12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i9 %trunc_ln12" [histogram_parallel.cpp:12]   --->   Operation 21 'zext' 'zext_ln12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%inputA_addr = getelementptr i32 %inputA, i64 0, i64 %zext_ln12" [histogram_parallel.cpp:12]   --->   Operation 22 'getelementptr' 'inputA_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_1 : Operation 23 [2/2] (3.25ns)   --->   "%old_3 = load i9 %inputA_addr" [histogram_parallel.cpp:12]   --->   Operation 23 'load' 'old_3' <Predicate = (!icmp_ln10)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 512> <RAM>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln10 = store i10 %add_ln10, i10 %i_1" [histogram_parallel.cpp:10]   --->   Operation 24 'store' 'store_ln10' <Predicate = (!icmp_ln10)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 25 [1/2] (3.25ns)   --->   "%old_3 = load i9 %inputA_addr" [histogram_parallel.cpp:12]   --->   Operation 25 'load' 'old_3' <Predicate = (!icmp_ln10)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 512> <RAM>

State 3 <SV = 2> <Delay = 5.72>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%old_2 = load i32 %old_1" [histogram_parallel.cpp:10]   --->   Operation 26 'load' 'old_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln10 = trunc i32 %old_2" [histogram_parallel.cpp:10]   --->   Operation 27 'trunc' 'trunc_ln10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 512, i64 512, i64 512"   --->   Operation 28 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%specpipeline_ln8 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [histogram_parallel.cpp:8]   --->   Operation 29 'specpipeline' 'specpipeline_ln8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%specloopname_ln8 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [histogram_parallel.cpp:8]   --->   Operation 30 'specloopname' 'specloopname_ln8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (2.47ns)   --->   "%icmp_ln13 = icmp_eq  i32 %old_2, i32 %old_3" [histogram_parallel.cpp:13]   --->   Operation 31 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void, void %.split._crit_edge" [histogram_parallel.cpp:13]   --->   Operation 32 'br' 'br_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%acc_load_1 = load i32 %acc" [histogram_parallel.cpp:16]   --->   Operation 33 'load' 'acc_load_1' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i32 %old_2" [histogram_parallel.cpp:16]   --->   Operation 34 'zext' 'zext_ln16' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%hist_addr = getelementptr i32 %hist, i64 0, i64 %zext_ln16" [histogram_parallel.cpp:16]   --->   Operation 35 'getelementptr' 'hist_addr' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (3.25ns)   --->   "%store_ln16 = store i32 %acc_load_1, i10 %hist_addr" [histogram_parallel.cpp:16]   --->   Operation 36 'store' 'store_ln16' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 544> <RAM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i32 %old_3" [histogram_parallel.cpp:17]   --->   Operation 37 'zext' 'zext_ln17' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%hist_addr_1 = getelementptr i32 %hist, i64 0, i64 %zext_ln17" [histogram_parallel.cpp:17]   --->   Operation 38 'getelementptr' 'hist_addr_1' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (3.25ns)   --->   "%hist_load = load i10 %hist_addr_1" [histogram_parallel.cpp:17]   --->   Operation 39 'load' 'hist_load' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 544> <RAM>
ST_3 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln12 = store i32 %old_3, i32 %old_1" [histogram_parallel.cpp:12]   --->   Operation 40 'store' 'store_ln12' <Predicate = (!icmp_ln10)> <Delay = 1.58>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%acc_load = load i32 %acc"   --->   Operation 48 'load' 'acc_load' <Predicate = (icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %acc_out, i32 %acc_load"   --->   Operation 49 'write' 'write_ln0' <Predicate = (icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%write_ln10 = write void @_ssdm_op_Write.ap_auto.i10P0A, i10 %old_1_out, i10 %trunc_ln10" [histogram_parallel.cpp:10]   --->   Operation 50 'write' 'write_ln10' <Predicate = (icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 51 'ret' 'ret_ln0' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.96>
ST_4 : Operation 41 [1/2] (3.25ns)   --->   "%hist_load = load i10 %hist_addr_1" [histogram_parallel.cpp:17]   --->   Operation 41 'load' 'hist_load' <Predicate = (!icmp_ln13)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 544> <RAM>
ST_4 : Operation 42 [1/1] (1.70ns)   --->   "%store_ln17 = store i32 %hist_load, i32 %acc" [histogram_parallel.cpp:17]   --->   Operation 42 'store' 'store_ln17' <Predicate = (!icmp_ln13)> <Delay = 1.70>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.split._crit_edge"   --->   Operation 43 'br' 'br_ln0' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%acc_load_2 = load i32 %acc" [histogram_parallel.cpp:9]   --->   Operation 44 'load' 'acc_load_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (2.55ns)   --->   "%acc_1 = add i32 %acc_load_2, i32 1" [histogram_parallel.cpp:9]   --->   Operation 45 'add' 'acc_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (1.70ns)   --->   "%store_ln9 = store i32 %acc_1, i32 %acc" [histogram_parallel.cpp:9]   --->   Operation 46 'store' 'store_ln9' <Predicate = true> <Delay = 1.70>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 47 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.36ns
The critical path consists of the following:
	'alloca' operation ('i') [7]  (0 ns)
	'load' operation ('i', histogram_parallel.cpp:12) on local variable 'i' [17]  (0 ns)
	'add' operation ('add_ln10', histogram_parallel.cpp:10) [21]  (1.73 ns)
	'store' operation ('store_ln10', histogram_parallel.cpp:10) of variable 'add_ln10', histogram_parallel.cpp:10 on local variable 'i' [46]  (1.59 ns)
	blocking operation 0.0395 ns on control path)

 <State 2>: 3.25ns
The critical path consists of the following:
	'load' operation ('val', histogram_parallel.cpp:12) on array 'inputA' [29]  (3.25 ns)

 <State 3>: 5.73ns
The critical path consists of the following:
	'load' operation ('old', histogram_parallel.cpp:10) on local variable 'old' [16]  (0 ns)
	'getelementptr' operation ('hist_addr', histogram_parallel.cpp:16) [35]  (0 ns)
	'store' operation ('store_ln16', histogram_parallel.cpp:16) of variable 'acc_load_1', histogram_parallel.cpp:16 on array 'hist' [36]  (3.25 ns)
	blocking operation 2.47 ns on control path)

 <State 4>: 4.96ns
The critical path consists of the following:
	'load' operation ('hist_load', histogram_parallel.cpp:17) on array 'hist' [39]  (3.25 ns)
	'store' operation ('store_ln17', histogram_parallel.cpp:17) of variable 'hist_load', histogram_parallel.cpp:17 on local variable 'acc' [40]  (1.71 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
