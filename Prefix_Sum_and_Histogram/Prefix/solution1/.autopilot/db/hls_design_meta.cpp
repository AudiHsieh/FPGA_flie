#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("inputA_address0", 9, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("inputA_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("inputA_d0", 32, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("inputA_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("inputA_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("inputA_address1", 9, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("inputA_ce1", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("inputA_d1", 32, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("inputA_q1", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("inputA_we1", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("inputB_address0", 9, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("inputB_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("inputB_d0", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("inputB_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("inputB_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("inputB_address1", 9, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("inputB_ce1", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("inputB_d1", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("inputB_q1", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("inputB_we1", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("hist_address0", 10, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("hist_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("hist_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("hist_q0", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("hist_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("hist_address1", 10, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("hist_ce1", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("hist_d1", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("hist_q1", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("hist_we1", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "histogram";
